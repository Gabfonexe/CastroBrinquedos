<template>
  <div class="landing-page">
    <!-- MenuTopBar -->
    <MenuTopBar />

    <!-- Seção Hero -->
    <section class="flex justify-between items-center px-6 py-8 min-h-[600px]">
      <div class="max-w-lg">
        <h1 class="text-4xl font-bold mb-4">Transforme sua festa em um parque de diversão!</h1>
        <p class="text-lg">Alugamos brinquedos e equipamentos de entretenimento para tornar sua festa inesquecível e cheia de diversão.</p>
      </div>
      <div>
        <img src="" alt="Imagem da empresa" class="max-w-md" />
      </div>
    </section>

    <!-- Seção de Brinquedos -->
    <section class="py-8 px-6 bg-gray-100 min-h-[600px]">
      <h1 class="text-3xl font-semibold mb-2">Nossos Brinquedos</h1>
      <p class="mb-6 text-gray-700">Escolha entre nossa variedade de brinquedos e equipamentos para tornar sua festa incrível. Todos os produtos incluem montagem e desmontagem.</p>
      <Carousel :value="products" :numVisible="3" :numScroll="1" :responsiveOptions="responsiveOptions">
        <template #item="{ data }">
          <Card style="margin: 1rem">
            <template #header>
              <img :src="data.image" alt="Produto" class="w-full h-40 object-cover" />
            </template>
            <template #title>{{ data.name }}</template>
            <template #content>
              <p>{{ data.description }}</p>
            </template>
          </Card>
        </template>
      </Carousel>
    </section>

    <!-- Seção de Disponibilidade -->
    <section class="flex px-6 py-8 gap-20 items-start min-h-[550px]">
      <div class="w-[400px]">
        <h2 class="text-2xl font-semibold mb-2">Verifique a Disponibilidade</h2>
        <Calendar v-model="date" inline />
      </div>
      <div class="w-[300px]">
        <h2 class="text-2xl font-semibold mb-2">Solicite seu Aluguel</h2>
        <InputText v-model="form.name" placeholder="Seu nome" class="w-full mb-2" />
        <InputText v-model="form.email" placeholder="Seu e-mail" class="w-full mb-2" />
        <Textarea v-model="form.message" placeholder="Mensagem" rows="4" class="w-full mb-2" />
        <Button label="Enviar" class="w-full" />
      </div>
    </section>

    <!-- Seção de Depoimentos -->
    <section class="px-6 py-8 bg-gray-50 min-h-[400px] text-center">
      <div class="mb-6">
        <h1 class="text-3xl font-bold">O que nossos clientes dizem</h1>
        <p class="text-gray-700">Veja o que nossos clientes falam sobre nossas festas e brinquedos. A satisfação deles é o nosso maior orgulho!</p>
      </div>
      <div class="flex justify-around">
        <Card v-for="(review, index) in testimonials" :key="index" class="w-[30%]">
          <template #title>{{ review.name }}</template>
          <template #content>{{ review.comment }}</template>
        </Card>
      </div>
    </section>

    <!-- Seção de Perguntas Frequentes -->
    <section class="px-6 py-8 min-h-[600px]">
      <h1 class="text-3xl font-bold mb-2">Perguntas Frequentes</h1>
      <p class="mb-4 text-gray-700">Tire suas dúvidas sobre nossos serviços e como funcionam nossas locações.</p>
      <Accordion :multiple="true">
        <AccordionTab v-for="(faq, i) in faqs" :key="i" :header="faq.question">
          <p>{{ faq.answer }}</p>
        </AccordionTab>
      </Accordion>
    </section>

    <!-- Rodapé -->
    <FooterBar />
  </div>
</template>

<script>
import { ref, onMounted } from 'vue'
import axios from 'axios'
import Calendar from 'primevue/calendar'
import InputText from 'primevue/inputtext'
import Textarea from 'primevue/textarea'
import Button from 'primevue/button'
import Card from 'primevue/card'
import Carousel from 'primevue/carousel'
import Accordion from 'primevue/accordion'
import AccordionTab from 'primevue/accordiontab'

import MenuTopBar from './components/MenuTopBar.vue'
import FooterBar from './components/FooterBar.vue'

export default {
  name: 'LandingPage',
  components: {
    MenuTopBar,
    FooterBar,
    Calendar,
    InputText,
    Textarea,
    Button,
    Card,
    Carousel,
    Accordion,
    AccordionTab,
  },
  setup() {
    const date = ref(null)
    const form = ref({ name: '', email: '', message: '' })
    const products = ref([])
    const disabledDates = ref([])
    const testimonials = ref([
      { name: 'Joana Silva', comment: 'Excelente serviço! As crianças se divertiram demais.' },
      { name: 'Carlos Mendes', comment: 'Ótima qualidade dos brinquedos e atendimento muito atencioso.' },
      { name: 'Ana Paula', comment: 'Tudo chegou no horário e foi super tranquilo. Recomendo!' },
    ])
    const faqs = ref([
      { question: 'Com quanto tempo de antecedência preciso reservar?', answer: 'Recomendamos pelo menos 1 semana antes do evento para garantir a disponibilidade.' },
      { question: 'O transporte está incluso no valor?', answer: 'Sim, para eventos dentro da cidade. Fora da cidade pode haver taxa adicional.' },
      { question: 'Como faço o pagamento?', answer: 'Aceitamos PIX, transferência bancária e cartão de crédito.' },
    ])

    const responsiveOptions = [
      {
        breakpoint: '1024px',
        numVisible: 3,
        numScroll: 1
      },
      {
        breakpoint: '768px',
        numVisible: 2,
        numScroll: 1
      },
      {
        breakpoint: '560px',
        numVisible: 1,
        numScroll: 1
      }
    ]

    onMounted(async () => {
      try {
        const productResponse = await axios.get('http://localhost:8080/products')
        products.value = productResponse.data

        const unavailableResponse = await axios.get('http://localhost:8080/unavailable/dates')
        disabledDates.value = unavailableResponse.data.map(item => {
          const d = new Date(item.date)
          d.setHours(d.getHours() + 3)
          return d
        })
      } catch (error) {
        console.error('Erro ao buscar dados:', error)
      }
    })

    return {
      date,
      form,
      products,
      disabledDates,
      testimonials,
      faqs,
      responsiveOptions,
    }
  }
}
</script>

<style scoped>
.landing-page {
  font-family: 'Roboto', sans-serif;
}
</style>
